#include <stdio.h>
#include <stdlib.h>

#define N 5

int fork_status[N];

void eat(int id) {
    int left = id;
    int right = (id + 1) % N;

    if (fork_status[left] == 0 && fork_status[right] == 0) {
        fork_status[left] = 1;
        fork_status[right] = 1;

        printf("Philosopher %d picked forks %d and %d\n", id, left, right);
        printf("Philosopher %d is eating\n", id);

        fork_status[left] = 0;
        fork_status[right] = 0;
        printf("Philosopher %d put down forks\n", id);
        printf("Philosopher %d is thinking\n", id);
    } else {
        printf("Philosopher %d cannot eat now, is thinking\n", id);
    }
}

int main() {
    int choice, id;
    for (int i = 0; i < N; i++) fork_status[i] = 0;

    while (1) {
        printf("\nMenu:\n1. Philosopher wants to eat\n2. Exit\nEnter choice: ");
        scanf("%d", &choice);

        if (choice == 1) {
            printf("Enter philosopher ID (0-%d): ", N - 1);
            scanf("%d", &id);

            if (id >= 0 && id < N) {
                eat(id);
            } else {
                printf("Invalid philosopher ID\n");
            }
        } else if (choice == 2) {
            break;
        } else {
            printf("Invalid choice\n");
        }
    }
    return 0;
}

OUTPUT
Menu:
1. Philosopher wants to eat
2. Exit
Enter choice: 1
Enter philosopher ID (0-4): 3
Philosopher 3 picked forks 3 and 4
Philosopher 3 is eating
Philosopher 3 put down forks
Philosopher 3 is thinking

Menu:
1. Philosopher wants to eat
2. Exit
Enter choice: 1
Enter philosopher ID (0-4): 4
Philosopher 4 picked forks 4 and 0
Philosopher 4 is eating
Philosopher 4 put down forks
Philosopher 4 is thinking
